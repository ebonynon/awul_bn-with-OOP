;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/30/2016 7:13:51 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A77      	GOTO       631
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0003	0x300E      	MOVLW      14
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x0007	0x0BFD      	DECFSZ     R13, 1
0x0008	0x2807      	GOTO       L_Delay_22us1
0x0009	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x000A	0x0008      	RETURN
; end of _Delay_22us
_ADC_Read:
;__Lib_ADC_A_C.c,45 :: 		
;__Lib_ADC_A_C.c,47 :: 		
0x000B	0x1283      	BCF        STATUS, 5
0x000C	0x1303      	BCF        STATUS, 6
0x000D	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,48 :: 		
0x000E	0x30C0      	MOVLW      192
0x000F	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,49 :: 		
0x0010	0x1683      	BSF        STATUS, 5
0x0011	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,50 :: 		
0x0012	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,51 :: 		
0x0013	0x1283      	BCF        STATUS, 5
0x0014	0x082A      	MOVF       FARG_ADC_Read_channel, 0
0x0015	0x00F0      	MOVWF      R0
0x0016	0x0DF0      	RLF        R0, 1
0x0017	0x1070      	BCF        R0, 0
0x0018	0x0DF0      	RLF        R0, 1
0x0019	0x1070      	BCF        R0, 0
0x001A	0x0DF0      	RLF        R0, 1
0x001B	0x1070      	BCF        R0, 0
0x001C	0x0870      	MOVF       R0, 0
0x001D	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,54 :: 		
0x001E	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,57 :: 		
0x001F	0x2003      	CALL       _Delay_22us
;__Lib_ADC_A_C.c,60 :: 		
0x0020	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_C.c,63 :: 		
L_ADC_Read2:
0x0021	0x1D1F      	BTFSS      ADCON0, 2
0x0022	0x2825      	GOTO       L_ADC_Read3
;__Lib_ADC_A_C.c,64 :: 		
0x0023	0x0000      	NOP
0x0024	0x2821      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,67 :: 		
0x0025	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_C.c,70 :: 		
0x0026	0x081E      	MOVF       ADRESH, 0
0x0027	0x00F1      	MOVWF      R0+1
0x0028	0x01F0      	CLRF       R0
0x0029	0x1683      	BSF        STATUS, 5
0x002A	0x081E      	MOVF       ADRESL, 0
0x002B	0x04F0      	IORWF      R0, 1
0x002C	0x3000      	MOVLW      0
0x002D	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_A_C.c,71 :: 		
L_end_ADC_Read:
0x002E	0x0008      	RETURN
; end of _ADC_Read
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x002F	0x1283      	BCF        STATUS, 5
0x0030	0x1303      	BCF        STATUS, 6
0x0031	0x0829      	MOVF       ___DoICPAddr+1, 0
0x0032	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0033	0x0828      	MOVF       ___DoICPAddr, 0
0x0034	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0035	0x0008      	RETURN
; end of _____DoICP
_obs_detec:
;awul 01.c,269 :: 		void obs_detec()
;awul 01.c,271 :: 		while(1)
L_obs_detec48:
;awul 01.c,273 :: 		bl=ADC_Read(0);  // adc means analog to digital convertor   0-1024
0x0036	0x1283      	BCF        STATUS, 5
0x0037	0x1303      	BCF        STATUS, 6
0x0038	0x01AA      	CLRF       FARG_ADC_Read_channel
0x0039	0x200B      	CALL       _ADC_Read
0x003A	0x0870      	MOVF       R0, 0
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x00A6      	MOVWF      _bl
0x003D	0x0871      	MOVF       R0+1, 0
0x003E	0x00A7      	MOVWF      _bl+1
;awul 01.c,274 :: 		br=ADC_Read(1);  // adc means analog to digital convertor
0x003F	0x3001      	MOVLW      1
0x0040	0x00AA      	MOVWF      FARG_ADC_Read_channel
0x0041	0x200B      	CALL       _ADC_Read
0x0042	0x0870      	MOVF       R0, 0
0x0043	0x1283      	BCF        STATUS, 5
0x0044	0x00A0      	MOVWF      _br
0x0045	0x0871      	MOVF       R0+1, 0
0x0046	0x00A1      	MOVWF      _br+1
;awul 01.c,275 :: 		fl=ADC_Read(2);  // adc means analog to digital convertor   0-1024
0x0047	0x3002      	MOVLW      2
0x0048	0x00AA      	MOVWF      FARG_ADC_Read_channel
0x0049	0x200B      	CALL       _ADC_Read
0x004A	0x0870      	MOVF       R0, 0
0x004B	0x1283      	BCF        STATUS, 5
0x004C	0x00A2      	MOVWF      _fl
0x004D	0x0871      	MOVF       R0+1, 0
0x004E	0x00A3      	MOVWF      _fl+1
;awul 01.c,276 :: 		fr=ADC_Read(3);  // adc means analog to digital convertor
0x004F	0x3003      	MOVLW      3
0x0050	0x00AA      	MOVWF      FARG_ADC_Read_channel
0x0051	0x200B      	CALL       _ADC_Read
0x0052	0x0870      	MOVF       R0, 0
0x0053	0x1283      	BCF        STATUS, 5
0x0054	0x00A4      	MOVWF      _fr
0x0055	0x0871      	MOVF       R0+1, 0
0x0056	0x00A5      	MOVWF      _fr+1
;awul 01.c,279 :: 		if(PORTB==0b11111000)
0x0057	0x0806      	MOVF       PORTB, 0
0x0058	0x3AF8      	XORLW      248
0x0059	0x1D03      	BTFSS      STATUS, 2
0x005A	0x2881      	GOTO       L_obs_detec50
;awul 01.c,283 :: 		PORTD = 0b10100000;
0x005B	0x30A0      	MOVLW      160
0x005C	0x0088      	MOVWF      PORTD
;awul 01.c,284 :: 		CCPR1L =130;
0x005D	0x3082      	MOVLW      130
0x005E	0x0095      	MOVWF      CCPR1L
;awul 01.c,285 :: 		CCPR2L =160;
0x005F	0x30A0      	MOVLW      160
0x0060	0x009B      	MOVWF      CCPR2L
;awul 01.c,286 :: 		Delay_ms(800);
0x0061	0x3009      	MOVLW      9
0x0062	0x00FB      	MOVWF      R11
0x0063	0x301E      	MOVLW      30
0x0064	0x00FC      	MOVWF      R12
0x0065	0x30E4      	MOVLW      228
0x0066	0x00FD      	MOVWF      R13
L_obs_detec51:
0x0067	0x0BFD      	DECFSZ     R13, 1
0x0068	0x2867      	GOTO       L_obs_detec51
0x0069	0x0BFC      	DECFSZ     R12, 1
0x006A	0x2867      	GOTO       L_obs_detec51
0x006B	0x0BFB      	DECFSZ     R11, 1
0x006C	0x2867      	GOTO       L_obs_detec51
0x006D	0x0000      	NOP
;awul 01.c,288 :: 		PORTD = 0b11110000;
0x006E	0x30F0      	MOVLW      240
0x006F	0x0088      	MOVWF      PORTD
;awul 01.c,289 :: 		CCPR1L =130;
0x0070	0x3082      	MOVLW      130
0x0071	0x0095      	MOVWF      CCPR1L
;awul 01.c,290 :: 		CCPR2L =160;
0x0072	0x30A0      	MOVLW      160
0x0073	0x009B      	MOVWF      CCPR2L
;awul 01.c,291 :: 		Delay_ms(20000);
0x0074	0x30CB      	MOVLW      203
0x0075	0x00FB      	MOVWF      R11
0x0076	0x30EC      	MOVLW      236
0x0077	0x00FC      	MOVWF      R12
0x0078	0x3084      	MOVLW      132
0x0079	0x00FD      	MOVWF      R13
L_obs_detec52:
0x007A	0x0BFD      	DECFSZ     R13, 1
0x007B	0x287A      	GOTO       L_obs_detec52
0x007C	0x0BFC      	DECFSZ     R12, 1
0x007D	0x287A      	GOTO       L_obs_detec52
0x007E	0x0BFB      	DECFSZ     R11, 1
0x007F	0x287A      	GOTO       L_obs_detec52
0x0080	0x0000      	NOP
;awul 01.c,293 :: 		}
L_obs_detec50:
;awul 01.c,305 :: 		if(fl > 250 && fr < 250 )
0x0081	0x3080      	MOVLW      128
0x0082	0x00F0      	MOVWF      R0
0x0083	0x3080      	MOVLW      128
0x0084	0x0623      	XORWF      _fl+1, 0
0x0085	0x0270      	SUBWF      R0, 0
0x0086	0x1D03      	BTFSS      STATUS, 2
0x0087	0x288A      	GOTO       L__obs_detec84
0x0088	0x0822      	MOVF       _fl, 0
0x0089	0x3CFA      	SUBLW      250
L__obs_detec84:
0x008A	0x1803      	BTFSC      STATUS, 0
0x008B	0x289E      	GOTO       L_obs_detec55
0x008C	0x3080      	MOVLW      128
0x008D	0x0625      	XORWF      _fr+1, 0
0x008E	0x00F0      	MOVWF      R0
0x008F	0x3080      	MOVLW      128
0x0090	0x0270      	SUBWF      R0, 0
0x0091	0x1D03      	BTFSS      STATUS, 2
0x0092	0x2895      	GOTO       L__obs_detec85
0x0093	0x30FA      	MOVLW      250
0x0094	0x0224      	SUBWF      _fr, 0
L__obs_detec85:
0x0095	0x1803      	BTFSC      STATUS, 0
0x0096	0x289E      	GOTO       L_obs_detec55
L__obs_detec80:
;awul 01.c,307 :: 		PORTD=0b10010000;
0x0097	0x3090      	MOVLW      144
0x0098	0x0088      	MOVWF      PORTD
;awul 01.c,308 :: 		CCPR1L = 120;
0x0099	0x3078      	MOVLW      120
0x009A	0x0095      	MOVWF      CCPR1L
;awul 01.c,309 :: 		CCPR2L = 140;
0x009B	0x308C      	MOVLW      140
0x009C	0x009B      	MOVWF      CCPR2L
;awul 01.c,313 :: 		}
0x009D	0x2952      	GOTO       L_obs_detec56
L_obs_detec55:
;awul 01.c,315 :: 		else if(fl < 250 && fr > 250)
0x009E	0x3080      	MOVLW      128
0x009F	0x0623      	XORWF      _fl+1, 0
0x00A0	0x00F0      	MOVWF      R0
0x00A1	0x3080      	MOVLW      128
0x00A2	0x0270      	SUBWF      R0, 0
0x00A3	0x1D03      	BTFSS      STATUS, 2
0x00A4	0x28A7      	GOTO       L__obs_detec86
0x00A5	0x30FA      	MOVLW      250
0x00A6	0x0222      	SUBWF      _fl, 0
L__obs_detec86:
0x00A7	0x1803      	BTFSC      STATUS, 0
0x00A8	0x28BB      	GOTO       L_obs_detec59
0x00A9	0x3080      	MOVLW      128
0x00AA	0x00F0      	MOVWF      R0
0x00AB	0x3080      	MOVLW      128
0x00AC	0x0625      	XORWF      _fr+1, 0
0x00AD	0x0270      	SUBWF      R0, 0
0x00AE	0x1D03      	BTFSS      STATUS, 2
0x00AF	0x28B2      	GOTO       L__obs_detec87
0x00B0	0x0824      	MOVF       _fr, 0
0x00B1	0x3CFA      	SUBLW      250
L__obs_detec87:
0x00B2	0x1803      	BTFSC      STATUS, 0
0x00B3	0x28BB      	GOTO       L_obs_detec59
L__obs_detec79:
;awul 01.c,317 :: 		PORTD=0b01100000;
0x00B4	0x3060      	MOVLW      96
0x00B5	0x0088      	MOVWF      PORTD
;awul 01.c,318 :: 		CCPR1L = 120;
0x00B6	0x3078      	MOVLW      120
0x00B7	0x0095      	MOVWF      CCPR1L
;awul 01.c,319 :: 		CCPR2L = 140;
0x00B8	0x308C      	MOVLW      140
0x00B9	0x009B      	MOVWF      CCPR2L
;awul 01.c,324 :: 		}
0x00BA	0x2952      	GOTO       L_obs_detec60
L_obs_detec59:
;awul 01.c,326 :: 		else if(fl > 250 && fr > 250)
0x00BB	0x3080      	MOVLW      128
0x00BC	0x00F0      	MOVWF      R0
0x00BD	0x3080      	MOVLW      128
0x00BE	0x0623      	XORWF      _fl+1, 0
0x00BF	0x0270      	SUBWF      R0, 0
0x00C0	0x1D03      	BTFSS      STATUS, 2
0x00C1	0x28C4      	GOTO       L__obs_detec88
0x00C2	0x0822      	MOVF       _fl, 0
0x00C3	0x3CFA      	SUBLW      250
L__obs_detec88:
0x00C4	0x1803      	BTFSC      STATUS, 0
0x00C5	0x2909      	GOTO       L_obs_detec63
0x00C6	0x3080      	MOVLW      128
0x00C7	0x00F0      	MOVWF      R0
0x00C8	0x3080      	MOVLW      128
0x00C9	0x0625      	XORWF      _fr+1, 0
0x00CA	0x0270      	SUBWF      R0, 0
0x00CB	0x1D03      	BTFSS      STATUS, 2
0x00CC	0x28CF      	GOTO       L__obs_detec89
0x00CD	0x0824      	MOVF       _fr, 0
0x00CE	0x3CFA      	SUBLW      250
L__obs_detec89:
0x00CF	0x1803      	BTFSC      STATUS, 0
0x00D0	0x2909      	GOTO       L_obs_detec63
L__obs_detec78:
;awul 01.c,329 :: 		if(bl < br)
0x00D1	0x3080      	MOVLW      128
0x00D2	0x0627      	XORWF      _bl+1, 0
0x00D3	0x00F0      	MOVWF      R0
0x00D4	0x3080      	MOVLW      128
0x00D5	0x0621      	XORWF      _br+1, 0
0x00D6	0x0270      	SUBWF      R0, 0
0x00D7	0x1D03      	BTFSS      STATUS, 2
0x00D8	0x28DB      	GOTO       L__obs_detec90
0x00D9	0x0820      	MOVF       _br, 0
0x00DA	0x0226      	SUBWF      _bl, 0
L__obs_detec90:
0x00DB	0x1803      	BTFSC      STATUS, 0
0x00DC	0x28ED      	GOTO       L_obs_detec64
;awul 01.c,331 :: 		PORTD=0b01100000;
0x00DD	0x3060      	MOVLW      96
0x00DE	0x0088      	MOVWF      PORTD
;awul 01.c,332 :: 		CCPR1L = 120;
0x00DF	0x3078      	MOVLW      120
0x00E0	0x0095      	MOVWF      CCPR1L
;awul 01.c,333 :: 		CCPR2L = 140;
0x00E1	0x308C      	MOVLW      140
0x00E2	0x009B      	MOVWF      CCPR2L
;awul 01.c,334 :: 		Delay_ms(10);
0x00E3	0x301A      	MOVLW      26
0x00E4	0x00FC      	MOVWF      R12
0x00E5	0x30F8      	MOVLW      248
0x00E6	0x00FD      	MOVWF      R13
L_obs_detec65:
0x00E7	0x0BFD      	DECFSZ     R13, 1
0x00E8	0x28E7      	GOTO       L_obs_detec65
0x00E9	0x0BFC      	DECFSZ     R12, 1
0x00EA	0x28E7      	GOTO       L_obs_detec65
0x00EB	0x0000      	NOP
;awul 01.c,337 :: 		}
0x00EC	0x2908      	GOTO       L_obs_detec66
L_obs_detec64:
;awul 01.c,339 :: 		else if(br < bl)
0x00ED	0x3080      	MOVLW      128
0x00EE	0x0621      	XORWF      _br+1, 0
0x00EF	0x00F0      	MOVWF      R0
0x00F0	0x3080      	MOVLW      128
0x00F1	0x0627      	XORWF      _bl+1, 0
0x00F2	0x0270      	SUBWF      R0, 0
0x00F3	0x1D03      	BTFSS      STATUS, 2
0x00F4	0x28F7      	GOTO       L__obs_detec91
0x00F5	0x0826      	MOVF       _bl, 0
0x00F6	0x0220      	SUBWF      _br, 0
L__obs_detec91:
0x00F7	0x1803      	BTFSC      STATUS, 0
0x00F8	0x2908      	GOTO       L_obs_detec67
;awul 01.c,341 :: 		PORTD=0b10010000;
0x00F9	0x3090      	MOVLW      144
0x00FA	0x0088      	MOVWF      PORTD
;awul 01.c,342 :: 		CCPR1L = 120;
0x00FB	0x3078      	MOVLW      120
0x00FC	0x0095      	MOVWF      CCPR1L
;awul 01.c,343 :: 		CCPR2L = 140;
0x00FD	0x308C      	MOVLW      140
0x00FE	0x009B      	MOVWF      CCPR2L
;awul 01.c,344 :: 		Delay_ms(10);
0x00FF	0x301A      	MOVLW      26
0x0100	0x00FC      	MOVWF      R12
0x0101	0x30F8      	MOVLW      248
0x0102	0x00FD      	MOVWF      R13
L_obs_detec68:
0x0103	0x0BFD      	DECFSZ     R13, 1
0x0104	0x2903      	GOTO       L_obs_detec68
0x0105	0x0BFC      	DECFSZ     R12, 1
0x0106	0x2903      	GOTO       L_obs_detec68
0x0107	0x0000      	NOP
;awul 01.c,347 :: 		}
L_obs_detec67:
L_obs_detec66:
;awul 01.c,349 :: 		}
0x0108	0x2952      	GOTO       L_obs_detec69
L_obs_detec63:
;awul 01.c,351 :: 		else if(bl > 600)
0x0109	0x3080      	MOVLW      128
0x010A	0x3A02      	XORLW      2
0x010B	0x00F0      	MOVWF      R0
0x010C	0x3080      	MOVLW      128
0x010D	0x0627      	XORWF      _bl+1, 0
0x010E	0x0270      	SUBWF      R0, 0
0x010F	0x1D03      	BTFSS      STATUS, 2
0x0110	0x2913      	GOTO       L__obs_detec92
0x0111	0x0826      	MOVF       _bl, 0
0x0112	0x3C58      	SUBLW      88
L__obs_detec92:
0x0113	0x1803      	BTFSC      STATUS, 0
0x0114	0x291C      	GOTO       L_obs_detec70
;awul 01.c,353 :: 		PORTD=0b10100000;
0x0115	0x30A0      	MOVLW      160
0x0116	0x0088      	MOVWF      PORTD
;awul 01.c,354 :: 		CCPR1L = 160;
0x0117	0x30A0      	MOVLW      160
0x0118	0x0095      	MOVWF      CCPR1L
;awul 01.c,355 :: 		CCPR2L = 110;
0x0119	0x306E      	MOVLW      110
0x011A	0x009B      	MOVWF      CCPR2L
;awul 01.c,359 :: 		}
0x011B	0x2952      	GOTO       L_obs_detec71
L_obs_detec70:
;awul 01.c,360 :: 		else if(br > 600)
0x011C	0x3080      	MOVLW      128
0x011D	0x3A02      	XORLW      2
0x011E	0x00F0      	MOVWF      R0
0x011F	0x3080      	MOVLW      128
0x0120	0x0621      	XORWF      _br+1, 0
0x0121	0x0270      	SUBWF      R0, 0
0x0122	0x1D03      	BTFSS      STATUS, 2
0x0123	0x2926      	GOTO       L__obs_detec93
0x0124	0x0820      	MOVF       _br, 0
0x0125	0x3C58      	SUBLW      88
L__obs_detec93:
0x0126	0x1803      	BTFSC      STATUS, 0
0x0127	0x292F      	GOTO       L_obs_detec72
;awul 01.c,362 :: 		PORTD=0b10100000;
0x0128	0x30A0      	MOVLW      160
0x0129	0x0088      	MOVWF      PORTD
;awul 01.c,363 :: 		CCPR1L = 110;
0x012A	0x306E      	MOVLW      110
0x012B	0x0095      	MOVWF      CCPR1L
;awul 01.c,364 :: 		CCPR2L = 160;
0x012C	0x30A0      	MOVLW      160
0x012D	0x009B      	MOVWF      CCPR2L
;awul 01.c,368 :: 		}
0x012E	0x2952      	GOTO       L_obs_detec73
L_obs_detec72:
;awul 01.c,382 :: 		PORTD=0b10100000;
0x012F	0x30A0      	MOVLW      160
0x0130	0x0088      	MOVWF      PORTD
;awul 01.c,383 :: 		CCPR1L = 125;
0x0131	0x307D      	MOVLW      125
0x0132	0x0095      	MOVWF      CCPR1L
;awul 01.c,384 :: 		CCPR2L = 160;
0x0133	0x30A0      	MOVLW      160
0x0134	0x009B      	MOVWF      CCPR2L
;awul 01.c,386 :: 		if(fl > 100 || fr > 100 )
0x0135	0x3080      	MOVLW      128
0x0136	0x00F0      	MOVWF      R0
0x0137	0x3080      	MOVLW      128
0x0138	0x0623      	XORWF      _fl+1, 0
0x0139	0x0270      	SUBWF      R0, 0
0x013A	0x1D03      	BTFSS      STATUS, 2
0x013B	0x293E      	GOTO       L__obs_detec94
0x013C	0x0822      	MOVF       _fl, 0
0x013D	0x3C64      	SUBLW      100
L__obs_detec94:
0x013E	0x1C03      	BTFSS      STATUS, 0
0x013F	0x294C      	GOTO       L__obs_detec77
0x0140	0x3080      	MOVLW      128
0x0141	0x00F0      	MOVWF      R0
0x0142	0x3080      	MOVLW      128
0x0143	0x0625      	XORWF      _fr+1, 0
0x0144	0x0270      	SUBWF      R0, 0
0x0145	0x1D03      	BTFSS      STATUS, 2
0x0146	0x2949      	GOTO       L__obs_detec95
0x0147	0x0824      	MOVF       _fr, 0
0x0148	0x3C64      	SUBLW      100
L__obs_detec95:
0x0149	0x1C03      	BTFSS      STATUS, 0
0x014A	0x294C      	GOTO       L__obs_detec77
0x014B	0x2952      	GOTO       L_obs_detec76
L__obs_detec77:
;awul 01.c,388 :: 		PORTD=0b10100000;
0x014C	0x30A0      	MOVLW      160
0x014D	0x0088      	MOVWF      PORTD
;awul 01.c,389 :: 		CCPR1L = 120;
0x014E	0x3078      	MOVLW      120
0x014F	0x0095      	MOVWF      CCPR1L
;awul 01.c,390 :: 		CCPR2L = 120;
0x0150	0x3078      	MOVLW      120
0x0151	0x009B      	MOVWF      CCPR2L
;awul 01.c,391 :: 		}
L_obs_detec76:
;awul 01.c,392 :: 		}
L_obs_detec73:
L_obs_detec71:
L_obs_detec69:
L_obs_detec60:
L_obs_detec56:
;awul 01.c,398 :: 		}
0x0152	0x2836      	GOTO       L_obs_detec48
;awul 01.c,399 :: 		}
L_end_obs_detec:
0x0153	0x0008      	RETURN
; end of _obs_detec
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0154	0x202F      	CALL       _____DoICP
0x0155	0x118A      	BCF        PCLATH, 3
0x0156	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0157	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0158	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0159	0x0AA8      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x015A	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x015B	0x0AA9      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x015C	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x015D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x015E	0x2954      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x015F	0x0008      	RETURN
; end of ___CC2DW
_line_following:
;awul 01.c,38 :: 		void line_following(){
;awul 01.c,41 :: 		while(1){
L_line_following2:
;awul 01.c,43 :: 		if(PORTB==0b00000000){  //
0x0160	0x1283      	BCF        STATUS, 5
0x0161	0x1303      	BCF        STATUS, 6
0x0162	0x0806      	MOVF       PORTB, 0
0x0163	0x3A00      	XORLW      0
0x0164	0x1D03      	BTFSS      STATUS, 2
0x0165	0x29A4      	GOTO       L_line_following4
;awul 01.c,44 :: 		PORTD = 0b11110000;
0x0166	0x30F0      	MOVLW      240
0x0167	0x0088      	MOVWF      PORTD
;awul 01.c,45 :: 		CCPR1L = 130;
0x0168	0x3082      	MOVLW      130
0x0169	0x0095      	MOVWF      CCPR1L
;awul 01.c,46 :: 		CCPR2L = 160;
0x016A	0x30A0      	MOVLW      160
0x016B	0x009B      	MOVWF      CCPR2L
;awul 01.c,47 :: 		Delay_ms(100);
0x016C	0x3002      	MOVLW      2
0x016D	0x00FB      	MOVWF      R11
0x016E	0x3004      	MOVLW      4
0x016F	0x00FC      	MOVWF      R12
0x0170	0x30BA      	MOVLW      186
0x0171	0x00FD      	MOVWF      R13
L_line_following5:
0x0172	0x0BFD      	DECFSZ     R13, 1
0x0173	0x2972      	GOTO       L_line_following5
0x0174	0x0BFC      	DECFSZ     R12, 1
0x0175	0x2972      	GOTO       L_line_following5
0x0176	0x0BFB      	DECFSZ     R11, 1
0x0177	0x2972      	GOTO       L_line_following5
0x0178	0x0000      	NOP
;awul 01.c,50 :: 		PORTD = 0b10100000;
0x0179	0x30A0      	MOVLW      160
0x017A	0x0088      	MOVWF      PORTD
;awul 01.c,51 :: 		CCPR1L = 130;
0x017B	0x3082      	MOVLW      130
0x017C	0x0095      	MOVWF      CCPR1L
;awul 01.c,52 :: 		CCPR2L = 160;
0x017D	0x30A0      	MOVLW      160
0x017E	0x009B      	MOVWF      CCPR2L
;awul 01.c,53 :: 		Delay_ms(200);
0x017F	0x3003      	MOVLW      3
0x0180	0x00FB      	MOVWF      R11
0x0181	0x3008      	MOVLW      8
0x0182	0x00FC      	MOVWF      R12
0x0183	0x3077      	MOVLW      119
0x0184	0x00FD      	MOVWF      R13
L_line_following6:
0x0185	0x0BFD      	DECFSZ     R13, 1
0x0186	0x2985      	GOTO       L_line_following6
0x0187	0x0BFC      	DECFSZ     R12, 1
0x0188	0x2985      	GOTO       L_line_following6
0x0189	0x0BFB      	DECFSZ     R11, 1
0x018A	0x2985      	GOTO       L_line_following6
;awul 01.c,55 :: 		PORTD = 0b11110000;
0x018B	0x30F0      	MOVLW      240
0x018C	0x0088      	MOVWF      PORTD
;awul 01.c,56 :: 		CCPR1L = 130;
0x018D	0x3082      	MOVLW      130
0x018E	0x0095      	MOVWF      CCPR1L
;awul 01.c,57 :: 		CCPR2L = 160;
0x018F	0x30A0      	MOVLW      160
0x0190	0x009B      	MOVWF      CCPR2L
;awul 01.c,58 :: 		Delay_ms(100);
0x0191	0x3002      	MOVLW      2
0x0192	0x00FB      	MOVWF      R11
0x0193	0x3004      	MOVLW      4
0x0194	0x00FC      	MOVWF      R12
0x0195	0x30BA      	MOVLW      186
0x0196	0x00FD      	MOVWF      R13
L_line_following7:
0x0197	0x0BFD      	DECFSZ     R13, 1
0x0198	0x2997      	GOTO       L_line_following7
0x0199	0x0BFC      	DECFSZ     R12, 1
0x019A	0x2997      	GOTO       L_line_following7
0x019B	0x0BFB      	DECFSZ     R11, 1
0x019C	0x2997      	GOTO       L_line_following7
0x019D	0x0000      	NOP
;awul 01.c,59 :: 		if(PORTB==0b00000000){   // go to obs....
0x019E	0x0806      	MOVF       PORTB, 0
0x019F	0x3A00      	XORLW      0
0x01A0	0x1D03      	BTFSS      STATUS, 2
0x01A1	0x29A3      	GOTO       L_line_following8
;awul 01.c,61 :: 		break;
0x01A2	0x2A76      	GOTO       L_line_following3
;awul 01.c,63 :: 		}
L_line_following8:
;awul 01.c,64 :: 		}
0x01A3	0x2A75      	GOTO       L_line_following9
L_line_following4:
;awul 01.c,67 :: 		else if(PORTB==0b11011000){  //go ahead
0x01A4	0x0806      	MOVF       PORTB, 0
0x01A5	0x3AD8      	XORLW      216
0x01A6	0x1D03      	BTFSS      STATUS, 2
0x01A7	0x29AF      	GOTO       L_line_following10
;awul 01.c,68 :: 		PORTD = 0b10100000;
0x01A8	0x30A0      	MOVLW      160
0x01A9	0x0088      	MOVWF      PORTD
;awul 01.c,69 :: 		CCPR1L = 255;
0x01AA	0x30FF      	MOVLW      255
0x01AB	0x0095      	MOVWF      CCPR1L
;awul 01.c,70 :: 		CCPR2L = 255;
0x01AC	0x30FF      	MOVLW      255
0x01AD	0x009B      	MOVWF      CCPR2L
;awul 01.c,72 :: 		}
0x01AE	0x2A75      	GOTO       L_line_following11
L_line_following10:
;awul 01.c,74 :: 		else if(PORTB==0b10011000){  //smooth left 1
0x01AF	0x0806      	MOVF       PORTB, 0
0x01B0	0x3A98      	XORLW      152
0x01B1	0x1D03      	BTFSS      STATUS, 2
0x01B2	0x29BA      	GOTO       L_line_following12
;awul 01.c,75 :: 		PORTD = 0b10100000;
0x01B3	0x30A0      	MOVLW      160
0x01B4	0x0088      	MOVWF      PORTD
;awul 01.c,76 :: 		CCPR1L = 140;
0x01B5	0x308C      	MOVLW      140
0x01B6	0x0095      	MOVWF      CCPR1L
;awul 01.c,77 :: 		CCPR2L = 250;
0x01B7	0x30FA      	MOVLW      250
0x01B8	0x009B      	MOVWF      CCPR2L
;awul 01.c,81 :: 		}
0x01B9	0x2A75      	GOTO       L_line_following13
L_line_following12:
;awul 01.c,83 :: 		else if(PORTB==0b11001000){  //smooth right 1
0x01BA	0x0806      	MOVF       PORTB, 0
0x01BB	0x3AC8      	XORLW      200
0x01BC	0x1D03      	BTFSS      STATUS, 2
0x01BD	0x29C5      	GOTO       L_line_following14
;awul 01.c,84 :: 		PORTD = 0b10100000;
0x01BE	0x30A0      	MOVLW      160
0x01BF	0x0088      	MOVWF      PORTD
;awul 01.c,85 :: 		CCPR1L = 250;
0x01C0	0x30FA      	MOVLW      250
0x01C1	0x0095      	MOVWF      CCPR1L
;awul 01.c,86 :: 		CCPR2L = 140;
0x01C2	0x308C      	MOVLW      140
0x01C3	0x009B      	MOVWF      CCPR2L
;awul 01.c,89 :: 		}
0x01C4	0x2A75      	GOTO       L_line_following15
L_line_following14:
;awul 01.c,91 :: 		else if(PORTB==0b10111000){  //smooth left 2
0x01C5	0x0806      	MOVF       PORTB, 0
0x01C6	0x3AB8      	XORLW      184
0x01C7	0x1D03      	BTFSS      STATUS, 2
0x01C8	0x29D0      	GOTO       L_line_following16
;awul 01.c,92 :: 		PORTD = 0b10100000;
0x01C9	0x30A0      	MOVLW      160
0x01CA	0x0088      	MOVWF      PORTD
;awul 01.c,93 :: 		CCPR1L = 110;
0x01CB	0x306E      	MOVLW      110
0x01CC	0x0095      	MOVWF      CCPR1L
;awul 01.c,94 :: 		CCPR2L = 250;
0x01CD	0x30FA      	MOVLW      250
0x01CE	0x009B      	MOVWF      CCPR2L
;awul 01.c,97 :: 		}
0x01CF	0x2A75      	GOTO       L_line_following17
L_line_following16:
;awul 01.c,99 :: 		else if(PORTB==0b11101000){  //smooth right 2
0x01D0	0x0806      	MOVF       PORTB, 0
0x01D1	0x3AE8      	XORLW      232
0x01D2	0x1D03      	BTFSS      STATUS, 2
0x01D3	0x29DB      	GOTO       L_line_following18
;awul 01.c,100 :: 		PORTD = 0b10100000;
0x01D4	0x30A0      	MOVLW      160
0x01D5	0x0088      	MOVWF      PORTD
;awul 01.c,101 :: 		CCPR1L = 250;
0x01D6	0x30FA      	MOVLW      250
0x01D7	0x0095      	MOVWF      CCPR1L
;awul 01.c,102 :: 		CCPR2L = 110;
0x01D8	0x306E      	MOVLW      110
0x01D9	0x009B      	MOVWF      CCPR2L
;awul 01.c,105 :: 		}
0x01DA	0x2A75      	GOTO       L_line_following19
L_line_following18:
;awul 01.c,107 :: 		else if(PORTB==0b00111000){  //left 1
0x01DB	0x0806      	MOVF       PORTB, 0
0x01DC	0x3A38      	XORLW      56
0x01DD	0x1D03      	BTFSS      STATUS, 2
0x01DE	0x29E5      	GOTO       L_line_following20
;awul 01.c,108 :: 		PORTD = 0b00100000;
0x01DF	0x3020      	MOVLW      32
0x01E0	0x0088      	MOVWF      PORTD
;awul 01.c,109 :: 		CCPR1L = 0;
0x01E1	0x0195      	CLRF       CCPR1L
;awul 01.c,110 :: 		CCPR2L = 250;
0x01E2	0x30FA      	MOVLW      250
0x01E3	0x009B      	MOVWF      CCPR2L
;awul 01.c,114 :: 		}
0x01E4	0x2A75      	GOTO       L_line_following21
L_line_following20:
;awul 01.c,116 :: 		else if(PORTB==0b11100000){  //right 1
0x01E5	0x0806      	MOVF       PORTB, 0
0x01E6	0x3AE0      	XORLW      224
0x01E7	0x1D03      	BTFSS      STATUS, 2
0x01E8	0x29EF      	GOTO       L_line_following22
;awul 01.c,117 :: 		PORTD = 0b10000000;
0x01E9	0x3080      	MOVLW      128
0x01EA	0x0088      	MOVWF      PORTD
;awul 01.c,118 :: 		CCPR1L = 250;
0x01EB	0x30FA      	MOVLW      250
0x01EC	0x0095      	MOVWF      CCPR1L
;awul 01.c,119 :: 		CCPR2L = 0;
0x01ED	0x019B      	CLRF       CCPR2L
;awul 01.c,122 :: 		}
0x01EE	0x2A75      	GOTO       L_line_following23
L_line_following22:
;awul 01.c,124 :: 		else if(PORTB==0b01111000){  //left 2
0x01EF	0x0806      	MOVF       PORTB, 0
0x01F0	0x3A78      	XORLW      120
0x01F1	0x1D03      	BTFSS      STATUS, 2
0x01F2	0x29F9      	GOTO       L_line_following24
;awul 01.c,125 :: 		PORTD = 0b00100000;
0x01F3	0x3020      	MOVLW      32
0x01F4	0x0088      	MOVWF      PORTD
;awul 01.c,126 :: 		CCPR1L = 0;
0x01F5	0x0195      	CLRF       CCPR1L
;awul 01.c,127 :: 		CCPR2L = 255;
0x01F6	0x30FF      	MOVLW      255
0x01F7	0x009B      	MOVWF      CCPR2L
;awul 01.c,131 :: 		}
0x01F8	0x2A75      	GOTO       L_line_following25
L_line_following24:
;awul 01.c,133 :: 		else if(PORTB==0b11110000){  //right 2
0x01F9	0x0806      	MOVF       PORTB, 0
0x01FA	0x3AF0      	XORLW      240
0x01FB	0x1D03      	BTFSS      STATUS, 2
0x01FC	0x2A03      	GOTO       L_line_following26
;awul 01.c,134 :: 		PORTD = 0b10000000;
0x01FD	0x3080      	MOVLW      128
0x01FE	0x0088      	MOVWF      PORTD
;awul 01.c,135 :: 		CCPR1L = 255;
0x01FF	0x30FF      	MOVLW      255
0x0200	0x0095      	MOVWF      CCPR1L
;awul 01.c,136 :: 		CCPR2L = 0;
0x0201	0x019B      	CLRF       CCPR2L
;awul 01.c,140 :: 		}
0x0202	0x2A75      	GOTO       L_line_following27
L_line_following26:
;awul 01.c,141 :: 		else if(PORTB==0b00011000){  //left 1
0x0203	0x0806      	MOVF       PORTB, 0
0x0204	0x3A18      	XORLW      24
0x0205	0x1D03      	BTFSS      STATUS, 2
0x0206	0x2A0E      	GOTO       L_line_following28
;awul 01.c,142 :: 		PORTD = 0b01100000;
0x0207	0x3060      	MOVLW      96
0x0208	0x0088      	MOVWF      PORTD
;awul 01.c,143 :: 		CCPR1L = 110;
0x0209	0x306E      	MOVLW      110
0x020A	0x0095      	MOVWF      CCPR1L
;awul 01.c,144 :: 		CCPR2L = 255;
0x020B	0x30FF      	MOVLW      255
0x020C	0x009B      	MOVWF      CCPR2L
;awul 01.c,148 :: 		}
0x020D	0x2A75      	GOTO       L_line_following29
L_line_following28:
;awul 01.c,150 :: 		else if(PORTB==0b11000000){  //right 1
0x020E	0x0806      	MOVF       PORTB, 0
0x020F	0x3AC0      	XORLW      192
0x0210	0x1D03      	BTFSS      STATUS, 2
0x0211	0x2A19      	GOTO       L_line_following30
;awul 01.c,151 :: 		PORTD = 0b10010000;
0x0212	0x3090      	MOVLW      144
0x0213	0x0088      	MOVWF      PORTD
;awul 01.c,152 :: 		CCPR1L = 255;
0x0214	0x30FF      	MOVLW      255
0x0215	0x0095      	MOVWF      CCPR1L
;awul 01.c,153 :: 		CCPR2L = 110;
0x0216	0x306E      	MOVLW      110
0x0217	0x009B      	MOVWF      CCPR2L
;awul 01.c,157 :: 		}
0x0218	0x2A75      	GOTO       L_line_following31
L_line_following30:
;awul 01.c,159 :: 		else if(PORTB==0b10001000){  //y juntion
0x0219	0x0806      	MOVF       PORTB, 0
0x021A	0x3A88      	XORLW      136
0x021B	0x1D03      	BTFSS      STATUS, 2
0x021C	0x2A24      	GOTO       L_line_following32
;awul 01.c,160 :: 		PORTD = 0b10100000;
0x021D	0x30A0      	MOVLW      160
0x021E	0x0088      	MOVWF      PORTD
;awul 01.c,161 :: 		CCPR1L = 250;
0x021F	0x30FA      	MOVLW      250
0x0220	0x0095      	MOVWF      CCPR1L
;awul 01.c,162 :: 		CCPR2L = 250;
0x0221	0x30FA      	MOVLW      250
0x0222	0x009B      	MOVWF      CCPR2L
;awul 01.c,166 :: 		}
0x0223	0x2A75      	GOTO       L_line_following33
L_line_following32:
;awul 01.c,168 :: 		else if(PORTB==0b10000000){  //y juntion
0x0224	0x0806      	MOVF       PORTB, 0
0x0225	0x3A80      	XORLW      128
0x0226	0x1D03      	BTFSS      STATUS, 2
0x0227	0x2A2E      	GOTO       L_line_following34
;awul 01.c,169 :: 		PORTD = 0b10000000;
0x0228	0x3080      	MOVLW      128
0x0229	0x0088      	MOVWF      PORTD
;awul 01.c,170 :: 		CCPR1L = 250;
0x022A	0x30FA      	MOVLW      250
0x022B	0x0095      	MOVWF      CCPR1L
;awul 01.c,171 :: 		CCPR2L = 0;
0x022C	0x019B      	CLRF       CCPR2L
;awul 01.c,175 :: 		}
0x022D	0x2A75      	GOTO       L_line_following35
L_line_following34:
;awul 01.c,177 :: 		else if(PORTB==0b00001000){  //y juntion
0x022E	0x0806      	MOVF       PORTB, 0
0x022F	0x3A08      	XORLW      8
0x0230	0x1D03      	BTFSS      STATUS, 2
0x0231	0x2A38      	GOTO       L_line_following36
;awul 01.c,178 :: 		PORTD = 0b00100000;
0x0232	0x3020      	MOVLW      32
0x0233	0x0088      	MOVWF      PORTD
;awul 01.c,179 :: 		CCPR1L = 0;
0x0234	0x0195      	CLRF       CCPR1L
;awul 01.c,180 :: 		CCPR2L = 250;
0x0235	0x30FA      	MOVLW      250
0x0236	0x009B      	MOVWF      CCPR2L
;awul 01.c,184 :: 		}
0x0237	0x2A75      	GOTO       L_line_following37
L_line_following36:
;awul 01.c,186 :: 		else if(PORTB==0b01100000){  //
0x0238	0x0806      	MOVF       PORTB, 0
0x0239	0x3A60      	XORLW      96
0x023A	0x1D03      	BTFSS      STATUS, 2
0x023B	0x2A43      	GOTO       L_line_following38
;awul 01.c,187 :: 		PORTD = 0b01100000;
0x023C	0x3060      	MOVLW      96
0x023D	0x0088      	MOVWF      PORTD
;awul 01.c,188 :: 		CCPR1L = 255;
0x023E	0x30FF      	MOVLW      255
0x023F	0x0095      	MOVWF      CCPR1L
;awul 01.c,189 :: 		CCPR2L = 255;
0x0240	0x30FF      	MOVLW      255
0x0241	0x009B      	MOVWF      CCPR2L
;awul 01.c,193 :: 		}
0x0242	0x2A75      	GOTO       L_line_following39
L_line_following38:
;awul 01.c,195 :: 		else if(PORTB==0b00110000){  //
0x0243	0x0806      	MOVF       PORTB, 0
0x0244	0x3A30      	XORLW      48
0x0245	0x1D03      	BTFSS      STATUS, 2
0x0246	0x2A4E      	GOTO       L_line_following40
;awul 01.c,196 :: 		PORTD = 0b10010000;
0x0247	0x3090      	MOVLW      144
0x0248	0x0088      	MOVWF      PORTD
;awul 01.c,197 :: 		CCPR1L = 255;
0x0249	0x30FF      	MOVLW      255
0x024A	0x0095      	MOVWF      CCPR1L
;awul 01.c,198 :: 		CCPR2L = 255;
0x024B	0x30FF      	MOVLW      255
0x024C	0x009B      	MOVWF      CCPR2L
;awul 01.c,202 :: 		}
0x024D	0x2A75      	GOTO       L_line_following41
L_line_following40:
;awul 01.c,204 :: 		else if(PORTB==0b01101000){  //
0x024E	0x0806      	MOVF       PORTB, 0
0x024F	0x3A68      	XORLW      104
0x0250	0x1D03      	BTFSS      STATUS, 2
0x0251	0x2A59      	GOTO       L_line_following42
;awul 01.c,205 :: 		PORTD = 0b01100000;
0x0252	0x3060      	MOVLW      96
0x0253	0x0088      	MOVWF      PORTD
;awul 01.c,206 :: 		CCPR1L = 255;
0x0254	0x30FF      	MOVLW      255
0x0255	0x0095      	MOVWF      CCPR1L
;awul 01.c,207 :: 		CCPR2L = 255;
0x0256	0x30FF      	MOVLW      255
0x0257	0x009B      	MOVWF      CCPR2L
;awul 01.c,210 :: 		}
0x0258	0x2A75      	GOTO       L_line_following43
L_line_following42:
;awul 01.c,212 :: 		else if(PORTB==0b10110000){  //
0x0259	0x0806      	MOVF       PORTB, 0
0x025A	0x3AB0      	XORLW      176
0x025B	0x1D03      	BTFSS      STATUS, 2
0x025C	0x2A64      	GOTO       L_line_following44
;awul 01.c,213 :: 		PORTD = 0b10010000;
0x025D	0x3090      	MOVLW      144
0x025E	0x0088      	MOVWF      PORTD
;awul 01.c,214 :: 		CCPR1L = 255;
0x025F	0x30FF      	MOVLW      255
0x0260	0x0095      	MOVWF      CCPR1L
;awul 01.c,215 :: 		CCPR2L = 255;
0x0261	0x30FF      	MOVLW      255
0x0262	0x009B      	MOVWF      CCPR2L
;awul 01.c,219 :: 		}
0x0263	0x2A75      	GOTO       L_line_following45
L_line_following44:
;awul 01.c,221 :: 		else if(PORTB==0b11111000){  //background
0x0264	0x0806      	MOVF       PORTB, 0
0x0265	0x3AF8      	XORLW      248
0x0266	0x1D03      	BTFSS      STATUS, 2
0x0267	0x2A6F      	GOTO       L_line_following46
;awul 01.c,237 :: 		PORTD = 0b01010000;
0x0268	0x3050      	MOVLW      80
0x0269	0x0088      	MOVWF      PORTD
;awul 01.c,238 :: 		CCPR1L =250;
0x026A	0x30FA      	MOVLW      250
0x026B	0x0095      	MOVWF      CCPR1L
;awul 01.c,239 :: 		CCPR2L =250;
0x026C	0x30FA      	MOVLW      250
0x026D	0x009B      	MOVWF      CCPR2L
;awul 01.c,244 :: 		}
0x026E	0x2A75      	GOTO       L_line_following47
L_line_following46:
;awul 01.c,250 :: 		PORTD = 0b10100000;
0x026F	0x30A0      	MOVLW      160
0x0270	0x0088      	MOVWF      PORTD
;awul 01.c,251 :: 		CCPR1L = 120;
0x0271	0x3078      	MOVLW      120
0x0272	0x0095      	MOVWF      CCPR1L
;awul 01.c,252 :: 		CCPR2L = 160;
0x0273	0x30A0      	MOVLW      160
0x0274	0x009B      	MOVWF      CCPR2L
;awul 01.c,257 :: 		}
L_line_following47:
L_line_following45:
L_line_following43:
L_line_following41:
L_line_following39:
L_line_following37:
L_line_following35:
L_line_following33:
L_line_following31:
L_line_following29:
L_line_following27:
L_line_following25:
L_line_following23:
L_line_following21:
L_line_following19:
L_line_following17:
L_line_following15:
L_line_following13:
L_line_following11:
L_line_following9:
;awul 01.c,265 :: 		}
0x0275	0x2960      	GOTO       L_line_following2
L_line_following3:
;awul 01.c,268 :: 		}
L_end_line_following:
0x0276	0x0008      	RETURN
; end of _line_following
_main:
0x0277	0x1283      	BCF        STATUS, 5
0x0278	0x1303      	BCF        STATUS, 6
0x0279	0x01A0      	CLRF       _br
0x027A	0x01A1      	CLRF       33
0x027B	0x01A2      	CLRF       _fl
0x027C	0x01A3      	CLRF       35
0x027D	0x01A4      	CLRF       _fr
0x027E	0x01A5      	CLRF       37
0x027F	0x01A6      	CLRF       _bl
0x0280	0x01A7      	CLRF       39
;awul 01.c,8 :: 		void main() {
;awul 01.c,10 :: 		TRISB = 0b11111000; // portB set inputs (front sener panal)
0x0281	0x30F8      	MOVLW      248
0x0282	0x1683      	BSF        STATUS, 5
0x0283	0x0086      	MOVWF      TRISB
;awul 01.c,11 :: 		PORTB = 0x00;
0x0284	0x1283      	BCF        STATUS, 5
0x0285	0x0186      	CLRF       PORTB
;awul 01.c,12 :: 		TRISC = 0x00;       // portC set outputs (pwm)
0x0286	0x1683      	BSF        STATUS, 5
0x0287	0x0187      	CLRF       TRISC
;awul 01.c,13 :: 		PORTC = 0b00000110;
0x0288	0x3006      	MOVLW      6
0x0289	0x1283      	BCF        STATUS, 5
0x028A	0x0087      	MOVWF      PORTC
;awul 01.c,14 :: 		TRISD = 0x00;       // portD set outputs (moter controller)
0x028B	0x1683      	BSF        STATUS, 5
0x028C	0x0188      	CLRF       TRISD
;awul 01.c,15 :: 		PORTD = 0x00;
0x028D	0x1283      	BCF        STATUS, 5
0x028E	0x0188      	CLRF       PORTD
;awul 01.c,16 :: 		TRISE = 0b011;      // portE set inputs (back senser panel)
0x028F	0x3003      	MOVLW      3
0x0290	0x1683      	BSF        STATUS, 5
0x0291	0x0089      	MOVWF      TRISE
;awul 01.c,17 :: 		PORTE = 0b000;
0x0292	0x1283      	BCF        STATUS, 5
0x0293	0x0189      	CLRF       PORTE
;awul 01.c,19 :: 		ADCON0 = 0b11010001;            // set analog
0x0294	0x30D1      	MOVLW      209
0x0295	0x009F      	MOVWF      ADCON0
;awul 01.c,20 :: 		ADCON1 = 0b10000000;
0x0296	0x3080      	MOVLW      128
0x0297	0x1683      	BSF        STATUS, 5
0x0298	0x009F      	MOVWF      ADCON1
;awul 01.c,21 :: 		TRISA =  0b00001111;
0x0299	0x300F      	MOVLW      15
0x029A	0x0085      	MOVWF      TRISA
;awul 01.c,23 :: 		PR2 = 0X7C;    // PWM s are on
0x029B	0x307C      	MOVLW      124
0x029C	0x0092      	MOVWF      PR2
;awul 01.c,24 :: 		T2CON = 0X05;                                     // aduma wm rate aka = 110
0x029D	0x3005      	MOVLW      5
0x029E	0x1283      	BCF        STATUS, 5
0x029F	0x0092      	MOVWF      T2CON
;awul 01.c,25 :: 		CCP1CON = 0X0C;
0x02A0	0x300C      	MOVLW      12
0x02A1	0x0097      	MOVWF      CCP1CON
;awul 01.c,26 :: 		CCP2CON = 0X3C;
0x02A2	0x303C      	MOVLW      60
0x02A3	0x009D      	MOVWF      CCP2CON
;awul 01.c,28 :: 		while(1)
L_main0:
;awul 01.c,30 :: 		line_following();
0x02A4	0x2160      	CALL       _line_following
;awul 01.c,31 :: 		obs_detec();
0x02A5	0x2036      	CALL       _obs_detec
;awul 01.c,35 :: 		}
0x02A6	0x2AA4      	GOTO       L_main0
;awul 01.c,36 :: 		}
L_end_main:
0x02A7	0x2AA7      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [8]    _Delay_22us
0x000B      [36]    _ADC_Read
0x002F       [7]    _____DoICP
0x0036     [286]    _obs_detec
0x0154      [12]    ___CC2DW
0x0160     [279]    _line_following
0x0277      [49]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [2]    _br
0x0022       [2]    _fl
0x0024       [2]    _fr
0x0026       [2]    _bl
0x0028       [2]    ___DoICPAddr
0x002A       [1]    FARG_ADC_Read_channel
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x0092       [1]    PR2
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_line_following2
  L_line_following3
  L_line_following4
  L_line_following5
  L_line_following6
  L_line_following7
  L_line_following8
  L_line_following9
  L_line_following10
  L_line_following11
  L_line_following12
  L_line_following13
  L_line_following14
  L_line_following15
  L_line_following16
  L_line_following17
  L_line_following18
  L_line_following19
  L_line_following20
  L_line_following21
  L_line_following22
  L_line_following23
  L_line_following24
  L_line_following25
  L_line_following26
  L_line_following27
  L_line_following28
  L_line_following29
  L_line_following30
  L_line_following31
  L_line_following32
  L_line_following33
  L_line_following34
  L_line_following35
  L_line_following36
  L_line_following37
  L_line_following38
  L_line_following39
  L_line_following40
  L_line_following41
  L_line_following42
  L_line_following43
  L_line_following44
  L_line_following45
  L_line_following46
  L_line_following47
  L_obs_detec48
  L_obs_detec49
  L_obs_detec50
  L_obs_detec51
  L_obs_detec52
  L_obs_detec53
  L_obs_detec54
  L_obs_detec55
  L_obs_detec56
  L_obs_detec57
  L_obs_detec58
  L_obs_detec59
  L_obs_detec60
  L_obs_detec61
  L_obs_detec62
  L_obs_detec63
  L_obs_detec64
  L_obs_detec65
  L_obs_detec66
  L_obs_detec67
  L_obs_detec68
  L_obs_detec69
  L_obs_detec70
  L_obs_detec71
  L_obs_detec72
  L_obs_detec73
  L_obs_detec74
  L_obs_detec75
  L_obs_detec76
  L__obs_detec77
  L__obs_detec78
  L__obs_detec79
  L__obs_detec80
  L_end_main
  _main
  L_end_line_following
  _line_following
  L_end_obs_detec
  _obs_detec
  L__obs_detec84
  L__obs_detec85
  L__obs_detec86
  L__obs_detec87
  L__obs_detec88
  L__obs_detec89
  L__obs_detec90
  L__obs_detec91
  L__obs_detec92
  L__obs_detec93
  L__obs_detec94
  L__obs_detec95
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
